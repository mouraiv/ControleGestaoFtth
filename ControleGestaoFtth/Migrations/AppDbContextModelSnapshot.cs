// <auto-generated />
using System;
using ControleGestaoFtth.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleGestaoFtth.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleGestaoFtth.Models.Construtoras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AceitacaoData")
                        .HasColumnType("datetime2");

                    b.Property<string>("AceitacaoMesRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BobinaLancamento")
                        .HasColumnType("int");

                    b.Property<int?>("BobinaRecepcao")
                        .HasColumnType("int");

                    b.Property<string>("CDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CHAVE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cabo")
                        .HasColumnType("int");

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int?>("Celula")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatadeConstrucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatadeRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatadoTeste")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipedeConstrucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstacoesId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCamposId")
                        .HasColumnType("int");

                    b.Property<int?>("FibraDGO")
                        .HasColumnType("int");

                    b.Property<string>("Meta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosicaoICX_DGO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuantidadeDeTeste")
                        .HasColumnType("int");

                    b.Property<int?>("SplitterCEOS")
                        .HasColumnType("int");

                    b.Property<int?>("StatesId")
                        .HasColumnType("int");

                    b.Property<string>("Tecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoObraId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalUms")
                        .HasColumnType("int");

                    b.Property<int?>("Viabilidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstacoesId");

                    b.HasIndex("EstadoCamposId");

                    b.HasIndex("StatesId");

                    b.HasIndex("TipoObraId");

                    b.ToTable("construtoras");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Estacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeEstacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estacoes");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.EstadoCampos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCampos");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Netwin", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("netwins");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadodeControle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadodeProjeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Tecnicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tecnicos");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.TipoObras", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tipoObras");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Externo")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Construtoras", b =>
                {
                    b.HasOne("ControleGestaoFtth.Models.Estacoes", "Estacao")
                        .WithMany()
                        .HasForeignKey("EstacoesId");

                    b.HasOne("ControleGestaoFtth.Models.EstadoCampos", "EstadoCampo")
                        .WithMany()
                        .HasForeignKey("EstadoCamposId");

                    b.HasOne("ControleGestaoFtth.Models.States", "State")
                        .WithMany()
                        .HasForeignKey("StatesId");

                    b.HasOne("ControleGestaoFtth.Models.TipoObras", "TipoObra")
                        .WithMany()
                        .HasForeignKey("TipoObraId");

                    b.Navigation("Estacao");

                    b.Navigation("EstadoCampo");

                    b.Navigation("State");

                    b.Navigation("TipoObra");
                });

            modelBuilder.Entity("ControleGestaoFtth.Models.Tecnicos", b =>
                {
                    b.HasOne("ControleGestaoFtth.Models.Usuarios", "usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
